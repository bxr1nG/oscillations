let form = document.querySelector('#dialog__form');
let input = document.querySelector('#dialog__input');
let button = document.querySelector('#dialog__button');
let messanger = document.querySelector('#dialog__messanger');

form.addEventListener('submit', handleForm);

function handleForm() {
	if (input.value != '') {
		messanger.innerHTML += `<div class="dialog__message question">${input.value}</div>`;
		let answer = getAnswer(input.value);
		messanger.innerHTML += `<div class="dialog__message answer">${answer}</div>`;
		messanger.scrollTop = 99999;
		//speechSynthesis.speak(new SpeechSynthesisUtterance(answer));
		messanger.innerHTML +=
			"<audio src='https://distrib.belstu.by/yandex-tts-bridge/?text=" +
			answer +
			"'></audio>";
		if (messanger.lastChild.tagName == 'AUDIO') {
			messanger.lastChild.play();
		}
	}
	input.value = '';
}

button.addEventListener('mouseover', buttonOver, false);
button.addEventListener('mouseout', buttonOut, false);
button.addEventListener('click', buttonClick, false);

function buttonOver() {
	button.classList.add('dialog__button-hover');
}

function buttonOut() {
	button.classList.remove('dialog__button-hover');
}

function buttonClick() {
	button.classList.add('dialog__button-listen');

	let recognizer = new webkitSpeechRecognition();
	recognizer.interimResults = true;
	recognizer.lang = 'ru-Ru';
	recognizer.onresult = function (event) {
		var result = event.results[event.resultIndex];
		if (result.isFinal) {
			input.value = result[0].transcript;
			button.classList.remove('dialog__button-listen');
			handleForm();
		} else {
			input.value = result[0].transcript;
		}
	};
	recognizer.start();
}

let knowledge = [
	[
		'идеальный газ',
		'- это',
		' теоретическая модель, широко применяемая для описания свойств и поведения реальных газов при умеренных давлениях и температурах.',
	],
	[
		'установка лабораторной работы',
		'Работает',
		"<p>таким образом: <p> <video src='Comp1_2_1.mp4' width='200' controls></video>",
	],

	[
		'скорость',
		'- это',
		'векторная физическая величина, характеризующая быстроту перемещения и направление движения материальной точки относительно выбранной системы отсчёта; по определению, равна производной радиус-вектора точки по времени.',
	],
	[
		'молекулярно кинетическая теория',
		'- это',
		'раздел молекулярной физики, который рассматривает свойства веществ на основании определенных законов взаимодействия между атомами, из которых состоит вещество и на основе представлений о молекулярном строении веществ.',
	],
	[
		'молекула',
		'- это',
		'минимальная частица любого вещества, которая только может существовать самостоятельно.',
	],
	[
		'электрон',
		'- это',
		'стабильная отрицательно заряженная элементарная частица.',
	],
	[
		'атом',
		'- это',
		'частица вещества микроскопических размеров и массы, наименьшая часть химического элемента, являющаяся носителем его свойств.',
	],
	[
		'равновесным стационарным состоянием газа ',
		'называется',
		'такое состояние, при котором количество молекул, приходящихся на заданный интервал скоростей, остается постоянным с течением времени.',
	],
	[
		'Экстремум функции',
		'- это',
		'максимальное или минимальное значение функции.',
	],
	[
		'энергия',
		'- это',
		' скалярная физическая величина, являющаяся единой мерой различных форм движения и взаимодействия материи, мерой перехода движения материи из одних форм в другие.',
	],
	[
		'кинетическая энергия',
		'- это',
		'скалярная функция, являющаяся мерой движения материальных точек, образующих рассматриваемую механическую систему, и зависящая только от масс и модулей скоростей этих точек.',
	],
	[
		'электронная лампа',
		'- это',
		'электровакуумный прибор (точнее, вакуумный электронный прибор), работающий за счёт управления интенсивностью потока электронов, движущихся в вакууме или разрежённом газе между электродами. ',
	],
	[
		'электровакуумный прибор',
		'- это',
		' устройство, предназначенное для генерации, усиления и преобразования электромагнитной энергии, в котором рабочее пространство освобождено от воздуха и защищено от окружающей атмосферы непроницаемой оболочкой. ',
	],
	[
		'термоэлектронная эмиссия',
		'- это',
		' явление выхода электронов из твёрдого тела, металла или карбидов или боридов переходных металлов в свободное пространство, обычно в вакуум или разрежённый газ при нагреве его до высокой температуры.',
	],
	[
		'диод',
		'- это',
		' электронный элемент, обладающий нелинейной вольт-амперной характеристикой.',
	],
	[
		'электрический ток',
		'- это',
		' направленное (упорядоченное) движение частиц или квазичастиц — носителей электрического заряда.',
	],
	[
		'катод',
		'- это',
		'электрод некоторого прибора, из которого вытекает электрический ток (в его конвенциональном понимании как поток положительных зарядов), в противоположность аноду в который он втекает. ',
	],
	[
		'анод',
		'- это',
		' электрод некоторого прибора, в который втекает электрический ток (в его конвенциональном понимании как поток положительных зарядов), в противоположность катоду из которого он вытекает.',
	],
	[
		'электронное облако',
		'- это',
		'наглядная модель, отражающая распределение функции плотности вероятности обнаружения электрона в атоме или молекуле в зависимости от энергии электрона',
	],
	[
		'электрическое напряжение',
		'- это',
		' физическая величина, значение которой равно работе эффективного электрического поля (включающего сторонние поля), совершаемой при переносе единичного пробного электрического заряда из точки A в точку B.',
	],
	[
		'электрическое сопротивление',
		'- это',
		' физическая величина, характеризующая свойство проводника препятствовать прохождению электрического тока и равная отношению напряжения на концах проводника к силе тока, протекающего по нему',
	],
	[
		'реостат',
		'- это',
		"<p>электрический аппарат, изобретённый Иоганном Христианом Поггендорфом, служащий для регулировки силы тока и напряжения в электрической цепи путём получения требуемой величины сопротивления.</p><img src='Index_files/image/274px-Johann_Christian_Poggendorff.jpg'/><p>И.Х. Поггендорф </p>",
	],
	[
		'запирающие напряжение',
		'- это',
		' такое минимальное напряжение, при котором фотоэлектроны перестают вылетать из металла.',
	],
	[
		'ускоряющие напряжение',
		'- это',
		'  разность потенциалов между катодом и анодом, генерирующая электрическое поле для ускорения электронов.',
	],
	['амперметр', '- это', ' прибор для измерения силы тока в амперах.'],
	[
		'1 ампер',
		'- это',
		' единица измерения силы электрического тока в Международной системе единиц (СИ), одна из семи основных единиц СИ.',
	],
	[
		'вольтметр',
		'- это',
		' электроизмерительный прибор непосредственного отсчёта для определения напряжения или ЭДС в электрических цепях.',
	],
	[
		'1 вольт',
		'- это',
		" <p>в Международной системе единиц (СИ) единица измерения электрического потенциала, разности потенциалов, электрического напряжения и электродвижущей силы. Названа в честь итальянского физика и физиолога Алессандро Вольты</p><img src='Index_files/image/220px-Alessandro_Volta.jpeg'/><p>Алессандро Вольта</p>",
	],
	[
		'резистор',
		'- это',
		'  пассивный элемент электрических цепей, обладающий определённым или переменным значением электрического сопротивления, предназначенный для линейного преобразования силы тока в напряжение и напряжения в силу тока, ограничения тока, поглощения электрической энергии и др.',
	],
	[
		'вольт-амперная характеристика',
		'- это',
		' зависимость тока, протекающего через двухполюсник, от напряжения на этом двухполюснике. Описывает поведение двухполюсника на постоянном токе',
	],
	[
		'распределение Максвелла',
		'- это',
		'  распределение вероятности, встречающееся в физике и химии. Оно лежит в основании кинетической теории газов, которая объясняет многие фундаментальные свойства газов, включая давление и диффузию.',
	],
	[
		'Максвелл',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/James_Clerk_Maxwell.png'/>",
	],
	[
		'максвелл',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/James_Clerk_Maxwell.png'/>",
	],
	[
		'функция распределения Максвелла',
		'записывается',
		"<p>как :</p><img src='Index_files/image/Annotation 2019-12-11 105030.png'/>",
	],
	[
		'Вольта',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/220px-Alessandro_Volta.jpeg'/>",
	],
	[
		'вольта',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/220px-Alessandro_Volta.jpeg'/>",
	],
	[
		'Поггендорф',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/274px-Johann_Christian_Poggendorff.jpg'/>",
	],
	[
		'Ом',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/274px-Johann_Christian_Poggendorff.jpg'/>",
	],
	[
		'ом',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/274px-Johann_Christian_Poggendorff.jpg'/>",
	],
	[
		'амперметр',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/274px-Johann_Christian_Poggendorff.jpg'/>",
	],
	[
		'установка',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/274px-Johann_Christian_Poggendorff.jpg'/>",
	],
	[
		'вольтметр',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/274px-Johann_Christian_Poggendorff.jpg'/>",
	],
	[
		'Цель работы',
		'звучит',
		'<p>как : Вычислить скорость электронного газа</p>',
	],
	[
		'Обрудование установки',
		'включает',
		'<p>в себя амперметр, вольтметр, диод, реостат</p>',
	],
	[
		'формула Минимальной скорости',
		'записывается',
		"<p>как на фото:</p><img src='Index_files/image/274px-Johann_Christian_Poggendorff.jpg'/>",
	],
	['сила тока', 'измеряется', '<p>в Амперах</p>'],
	['напряжение', 'измеряется', '<p>в вольтах</p>'],
	[
		'поггендорф',
		'выглядит',
		"<p>как на фото:</p><img src='Index_files/image/274px-Johann_Christian_Poggendorff.jpg'/>",
	],
	['вакуум', '- это', ' пространство, свободное от вещества.'],
	[
		'электронный газ',
		'- это',
		' модель в физике твердого тела, описывающая поведение электронов в телах с электронной проводимостью. ',
	],
];

// псевдоокончания сказуемых (глаголов, кратких причастий и прилагательных )
let endings = [
	['ет', '(ет|ут|ют)'],
	['ут', '(ет|ут|ют)'],
	['ют', '(ет|ут|ют)'], // 1 спряжение
	['ит', '(ит|ат|ят)'],
	['ат', '(ит|ат|ят)'],
	['ят', '(ит|ат|ят)'], // 2 спряжение
	['ется', '(ет|ут|ют)ся'],
	['утся', '(ет|ут|ют)ся'],
	['ются', '(ет|ут|ют)ся'], // 1 спряжение, возвратные
	['ится', '(ит|ат|ят)ся'],
	['атся', '(ит|ат|ят)ся'],
	['ятся', '(ит|ат|ят)ся'], // 2 спряжение, возвратные
	['ен', 'ен'],
	['ена', 'ена'],
	['ено', 'ено'],
	['ены', 'ены'], // краткие прилагательные
	['ан', 'ан'],
	['ана', 'ана'],
	['ано', 'ано'],
	['аны', 'аны'], // краткие прилагательные
	['жен', 'жен'],
	['жна', 'жна'],
	['жно', 'жно'],
	['жны', 'жны'], // краткие прилагательные
	['такое', '- это'],
]; // для вопроса "что такое X?" ответ - "X - это ..."

// черный список слов, распознаваемых как сказуемые по ошибке
let blacklist = [
	'замена',
	'замены',
	'атрибут',
	'маршрут',
	'член',
	'нет',
	'выглядит',
];

function getEnding(word) {
	// проверка по черному списку
	if (blacklist.indexOf(word) !== -1) return -1;
	// перебор псевдоокончаний
	for (let j = 0; j < endings.length; j++) {
		// проверка, оканчивается ли i-ое слово на j-ое псевдоокончание
		if (word.substring(word.length - endings[j][0].length) == endings[j][0]) {
			return j; // возврат номера псевдоокончания
		}
	}
	return -1;
}

// функция, которая делает первую букву большой
function big1(str) {
	return str[0].toUpperCase() + str.slice(1);
}

// главная функция, обрабатывающая запросы клиентов
function getAnswer(question) {
	txt = question.toLowerCase().replace(/[*_#?\'",.!()[\]\\/]/g, '');
	// массив слов и знаков препинания
	let words = txt.split(' ');
	// флаг, найден ли ответ
	let result = false;
	// формируемый функцией ответ на вопрос
	let answer = '';
	// перебор слов
	for (let i = 0; i < words.length; i++) {
		// поиск номера псевдоокончания
		let ending = getEnding(words[i]);

		// если псевдоокончание найдено – это сказуемое, подлежащее в вопросе после него
		if (ending >= 0) {
			// ТОЧНЫЙ ПОИСК
			let subject_array = words.slice(i + 1);
			let subject_text = subject_array.join(' ');
			for (let j = 0; j < knowledge.length; j++)
				if (
					((words[i] == knowledge[j][1] || // точное совпадение сказуемого
						words[i].substring(0, words[i].length - endings[ending][0].length) +
							endings[ending][1] ==
							knowledge[j][1]) && // совпадение сказуемого с подстановкой (такое ->- это)
						subject_text == knowledge[j][0]) ||
					subject_text == knowledge[j][2]
				) {
					// совпадение подлежащего
					// создание простого предложения из семантической связи
					answer += big1(
						knowledge[j][0] +
							' ' +
							knowledge[j][1] +
							' ' +
							knowledge[j][2] +
							'. '
					);
					result = true;
				}
			if (result == false) {
				// ПОИСК С ПОМОЩЬЮ РЕГУЛЯРНЫХ ВЫРАЖЕНИЙ
				// замена псевдоокончания на набор возможных окончаний
				words[i] =
					words[i].substring(0, words[i].length - endings[ending][0].length) +
					endings[ending][1];
				// создание регулярного выражения для поиска по сказуемому из вопроса
				let predicate = new RegExp(words[i]);
				// для кратких прилагательных захватываем следующее слово
				if (endings[ending][0] == endings[ending][1]) {
					predicate = new RegExp(words[i] + ' ' + words[i + 1]);
					i++;
				}
				let subject_array = words.slice(i + 1);
				// создание регулярного выражения для поиска по подлежащему из вопроса
				// из слов подлежащего выбрасываем короткие предлоги (периметр у квадрата = периметр квадрата)
				for (let j = 0; j < subject_array.length; j++) {
					if (subject_array[j].length < 3) {
						subject_array.splice(j);
						j--;
					}
				}
				let subject_string = subject_array.join('.*');
				// только если в послежащем больше трех символов
				if (subject_string.length > 3) {
					let subject = new RegExp('.*' + subject_string + '.*');
					// поиск совпадений с шаблонами среди связей семантической сети
					for (let j = 0; j < knowledge.length; j++) {
						if (
							predicate.test(knowledge[j][1]) &&
							(subject.test(knowledge[j][0]) || subject.test(knowledge[j][2]))
						) {
							// создание простого предложения из семантической связи
							answer += big1(
								knowledge[j][0] +
									' ' +
									knowledge[j][1] +
									' ' +
									knowledge[j][2] +
									'. '
							);
							result = true;
						}
					}
					// если совпадений с двумя шаблонами нет
					if (result == false) {
						// поиск совпадений только с шаблоном подлежащего
						for (let j = 0; j < knowledge.length; j++) {
							if (
								subject.test(knowledge[j][0]) ||
								subject.test(knowledge[j][2])
							) {
								// создание простого предложения из семантической связи
								answer += big1(
									knowledge[j][0] +
										' ' +
										knowledge[j][1] +
										' ' +
										knowledge[j][2] +
										'. '
								);
								result = true;
							}
						}
					}
				}
			}
		}
	}
	if (!result) answer = 'Ответ не найден';
	return answer;
}
